import os
import subprocess

if os.cpu_count() <= 2:
    cores = 1
else:
    cores = os.cpu_count() - 2

samples = ["ERR13244179"]

rule all:
    input:
        expand("fastq/small.{sample}_{r}.fastq", sample=samples, r=[1, 2]),
        "indices/"
        #expand("sra/{sample}", sample=samples)

rule prefetch:
    params:
        outdir="sra/"
    output:
        directory("sra/{sample}")
    shell:
        "prefetch {wildcards.sample} -O {params.outdir}"

rule fasterq_dump:
    params:
        outdir="fastq/"
    input:
        "sra/{sample}"
    output:
        directory("fastq/small.{sample}_{r}.fastq")
    shell:
        "fasterq-dump {input} --outdir {params.outdir}"

# maybe need to write something that verifies all reads are the same length?
r_len = 0
for file in os.listdir("fastq/"):
    command = f"head -n 1 fastq/{file} | awk '{{print $3}}'"
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    r_len = result.stdout.rstrip().split("=")[1]
    break

overhang = int(r_len) - 1

# following this tutorial:
# https://hbctraining.github.io/Intro-to-rnaseq-hpc-O2/lessons/03_alignment.html
# ask to add a 1pct gtf file to datacore2024?
# no gtf file, can't use sjdbOverhang
# this parameter is importnat, need to get gtf file
rule STAR_index:
    input:
        "genome/1pct_elegans.fa"
    output:
        directory("indices/")
    shell:
        """
        mkdir {output}
        STAR --runThreadN {cores} --runMode genomeGenerate --genomeDir {output} --genomeFastaFiles {input} 
        """

# use this to make smaller fastq files for testing
# lines=$(cat fastq/ERR13244179_1.fastq | wc -l) && cat fastq/ERR13244179_1.fastq | head -n $((((lines / 4) / 10000) * 4)) > fastq/small.ERR13244179_1.fastq

# i'm going to switch to using minimap2
# it seems to not neet the index making step or gtfs like STAR